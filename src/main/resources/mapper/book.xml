<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.db.project.book.BookMapper">

    <select id="selectBook" resultType="hashmap">
        select * from book
    </select>
    <!--사용자 맞춤형 새로 나온 6개의 책 -->
    <select id="selectNewBook" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
        select * from customer_book a
        join book c on a.book_isbn = c.book_isbn
        join customer b on a.customer_seq = b.customer_seq
        where b.customer_address_num < #{customer_address_num} + 100
        and b.customer_address_num > #{customer_address_num} - 100
        limit 10
        ]]>
    </select>
    <select id ="selectMainBook"  resultType="hashmap">[
        select * from currents_book
    </select>
    <!--isbn찾기 -->
    <select id = "selectBookIsbn" parameterType="hashmap" resultType="Integer">
        select book_isbn from book
        where book_isbn = #{book_isbn}
    </select>
    <!--책 등록하기-->
    <insert id="insertBook" parameterType="hashmap">
        insert into book(book_isbn, book_name, book_year, book_img, category_seq)
        values(#{book_isbn}, #{book_name}, #{book_year}, #{book_img}, #{category_seq})
    </insert>

    <!--사용자 책 등록하기-->
    <insert id="insertCustomerBook" parameterType="hashmap">
        insert into customer_book(customer_seq, book_isbn, customer_book_deposit, customer_book_comment, customer_book_secret_number)
        values (#{customer_seq}, #{book_isbn}, #{customer_book_deposit}, #{customer_book_comment}, #{customer_book_secret_number} )
    </insert>
    <select id="selectCustomerBookSeq" resultType="integer">
        select Max(customer_book_seq) as customer_book_seq from customer_book
    </select>
    <insert id="insertCustomerBookImage" parameterType="hashmap">
        insert into customer_book_image(customer_book_seq, customer_book_img) values(#{customer_book_seq}, #{customer_book_img})
    </insert>

    <select id="selectDetailBook" parameterType="hashmap" resultType="hashmap">
        SELECT * FROM book a
        join customer_book b on a.book_isbn = b.book_isbn
        join category c on a.category_seq = c.category_seq
        join customer d on b.customer_seq = d.customer_seq
        where b.customer_book_seq = #{customer_book_seq}
    </select>
    <select id="selectBookReservation" parameterType="hashmap" resultType="integer">
        select count(*) count from reservation a
        where customer_book_seq = #{customer_book_seq}
    </select>
    <insert id="insertBookReservation" parameterType="hashmap">
        insert into reservation(customer_seq, customer_book_seq)
        values(#{customer_seq}, #{customer_book_seq})
    </insert>
    <!--나의 도서 현황-->
    <select id="selectCustomerBook" parameterType="hashmap" resultType="hashmap">
        select cb.customer_book_seq, cb.book_isbn, cb.customer_book_type, b.book_img, b.book_name, (select count(*) from customer_book where customer_seq = #{customer_seq}) AS bookCount
        from customer_book cb, book b
        where cb.book_isbn = b.book_isbn AND customer_seq = #{customer_seq}
    </select>

    <!--우리 동네 도서-->
    <select id="selectCurrentBook" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
        select * from customer_book a
        join book c on a.book_isbn = c.book_isbn
        join customer b on a.customer_seq = b.customer_seq
        where b.customer_address_num < #{customer_address_num} + 100
        and b.customer_address_num > #{customer_address_num} - 100
        ]]>
    </select>

    <!--자신이 등록한 도서 삭제-->
    <delete id="deleteCustomerBook" parameterType="hashmap">
        delete from customer_book
        where customer_book_seq = #{customer_book_seq}
    </delete>

    <!--도서의 리뷰 상세 화면-->
    <select id="reviewBook" parameterType="hashmap" resultType="hashmap">
        select b.book_isbn, b.book_img, b.book_name, (SELECT count(*) FROM review WHERE book_isbn = #{book_isbn}) AS review_count, (SELECT round(avg(review_score), 1) FROM review WHERE book_isbn = #{book_isbn}) AS score
        from book b
        where b.book_isbn = #{book_isbn}
    </select>

    <!--회원이 올린 책 이미지-->
    <select id="selectBookImage" parameterType="hashmap" resultType="hashmap">
        select * from customer_book_image
        where customer_book_seq = #{customer_book_seq}
    </select>
    <update id="updateCustomerBookCertification" parameterType="hashmap">
        update customer_book set customer_book_certification_yn = #{customer_book_certification_yn}, customer_book_reason = #{customer_book_reason}
        where customer_book_seq = #{customer_book_seq}
    </update>

    <insert id="insertCurrentBook" parameterType="hashmap">
        insert into currents_book(currents_book_img, currents_book_address_num, customer_book_seq)
        values(#{book_img}, #{customer_address_num}, #{customer_book_seq} )
    </insert>
    <select id="selectCurrentMainBook" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
        select * from currents_book
        where currents_book_address_num > #{address_num} - 100
        and currents_book_address_num < #{address_num} + 100
        ]]>
    </select>
</mapper>