<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.db.project.matching.MatchingMapper">
    <!--매칭 등록-->
    <insert id="insertMatching" parameterType="hashmap">
        insert into matching(matching_deal_address, customer_seq, customer_book_seq, customer_secret_num)
        values((select customer_address from customer a join customer_book b on a.customer_seq = b.customer_seq where b.customer_book_seq = #{customer_book_seq} ), #{customer_seq}, #{customer_book_seq},#{customer_secret_num})
    </insert>

    <!--나의 매칭 목록(대출)-->
    <select id="selectRentalMatching" parameterType="hashmap" resultType="hashmap">
        select m.matching_seq, b.book_img, b.book_name, m.matching_type, m.matching_endAt
        from matching m, customer_book cb, book b
        where cb.book_isbn = b.book_isbn AND m.customer_book_seq = cb.customer_book_seq AND m.customer_seq = #{customer_seq}
    </select>
    <!--나의 매칭 목록(대여)-->
    <select id="selectBorrowMatching" parameterType="hashmap" resultType="hashmap">
        select m.matching_seq, b.book_img, b.book_name, m.matching_type ,m.matching_endAt
        FROM book b, matching m, customer_book cb
        WHERE m.customer_book_seq = cb.customer_book_seq AND b.book_isbn = cb.book_isbn AND cb.customer_seq = #{customer_seq}
    </select>
    <!--대여자 상태 변경-->
    <update id="updateRentalMatching" parameterType="hashmap">
        update matching set matching_rental_yn = 1
        where matching_seq = #{matching_seq}
    </update>
    <!--대출자 상태 변경-->
    <update id="updateBorrowMatching" parameterType="hashmap">
        update matching set matching_borrow_yn = 1
        where matching_seq = #{matching_seq}
    </update>

    <!--매칭 상태 조회 -->
    <select id="selectMatchingState" parameterType="hashmap" resultType="hashmap">
        select * from matching
        where matching_seq = #{matching_seq}
    </select>

    <!--매칭 상태 변경-->
    <update id="updateTypeMatching" parameterType="hashmap">
        update matching set matching_type = #{matching_type}
        where matching_seq = #{matching_seq}
    </update>

    <!-- 매칭 대출자, 대여자 상태 변경 -->
    <update id="updateMatchingReset" parameterType="hashmap">
        update matching set matching_rental_yn = 0 , matching_borrow_yn = 0
        where matching_seq = #{matching_seq}
    </update>

    <!-- 예약한 책 찾아오기 -->
    <select id="selectReservation" parameterType="hashmap" resultType="hashmap">
        SELECT r.reservation_seq, r.customer_book_seq, r.customer_seq, r.reservation_createAt, b.book_name
        FROM reservation r, customer_book cb, book b
        WHERE r.customer_book_seq = cb.customer_book_seq AND b.book_isbn = cb.book_isbn AND r.customer_seq = #{customer_seq} AND r.reservation_yn = 'n'
    </select>

    <!-- 예약한 책의 랭킹 찾아오기 -->
    <select id="selectRank" parameterType="hashmap" resultType="hashmap">
        SELECT customer_seq, ROW_NUMBER() OVER(ORDER BY reservation_createAt) AS rank
        FROM reservation
        WHERE customer_book_seq = #{customer_book_seq} AND reservation_yn = 'n'
    </select>
</mapper>