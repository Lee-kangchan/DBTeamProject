<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.db.project.customer.CustomerMapper">


    <!-- 회원가입 -->
    <insert id="insertCustomer" parameterType="hashmap">
        INSERT INTO
        customer(customer_id, customer_pw, customer_name, customer_nickname, customer_address_num, customer_phone, customer_address, recommend_seq)
        VALUES (#{customer_id},#{customer_pw},#{customer_name},#{customer_nickname}, #{customer_address_num}, #{customer_phone}, #{customer_address}, #{recommend_seq})
    </insert>
    <!--방금 생성한 회원 seq 찾기-->
    <select id="selectCustomer" parameterType="hashmap" resultType="integer">
        select max(customer_seq)as customer_seq from customer

    </select>
    <insert id="insertPreference">
        insert into customer_preference (customer_seq, category_seq)
        values(#{customer_seq}, #{category_seq})
    </insert>

    <!-- 추천인 입력-->
    <select id = "selectCustomerSeq" parameterType="hashmap" resultType="integer">
        SELECT customer_seq FROM customer
        WHERE customer_nickname = #{recommend_nickname};
    </select>

    <!-- 로그인 -->
    <select id="login" parameterType="hashmap" resultType="hashmap">
        SELECT * FROM customer
        WHERE customer_id = #{customer_id}
        AND customer_pw= #{customer_pw}
    </select>

    <!--Spring Scheduler -->
    <select id="rentalCustomer" resultType="hashmap">
        SELECT a.customer_seq , count(a.customer_seq) count FROM db2020.customer a
            join customer_book b on a.customer_seq = b.customer_seq
            join matching c on b.customer_book_seq = c.customer_book_seq
            where c.matching_type = "반납"
            group by a.customer_seq
            order by count desc
    </select>
    <select id="borrowCustomer" resultType="hashmap">
        SELECT a.customer_seq , count(a.customer_seq) count FROM db2020.customer a
            join matching c on a.customer_seq= c.customer_seq
            where c.matching_type = "반납"
            group by a.customer_seq
            order by count desc
    </select>
    <!-- 등급 변경 -->
    <update id="updateRentalMembership" parameterType="hashmap">
        UPDATE customer set rental_membership_seq= #{rental_membership_seq}
        where customer_seq = #{customer_seq}
    </update>
    <update id="updateBurrowMembership" parameterType="hashmap">
        UPDATE customer set borrow_membership_seq = #{borrow_membership_seq}
        where customer_seq = #{customer_seq}
    </update>
    <!-- 우수 회원 매기기-->
    <insert id="insertBestRental">
        insert best_rental(customer_customer_seq)
        values(SELECT a.customer_seq , count(a.customer_seq) count FROM db2020.customer a
            join customer_book b on a.customer_seq = b.customer_seq
            join matching c on b.customer_book_seq = c.customer_book_seq
            where c.matching_type = "반납"
            group by a.customer_seq
            order by count desc
            limit 5)
    </insert>
    <insert id="insertBestBorrow">
        insert best_borrow(customer_customer_seq)
        values(SELECT a.customer_seq , count(a.customer_seq) count FROM db2020.customer a
            join matching c on a.customer_seq= c.customer_seq
            where c.matching_type = "반납"
            group by a.customer_seq
            order by count desc
            limit 5)
    </insert>
    <delete id="deleteBestRental">
        delete from best_rental
    </delete>
    <delete id="deleteBestBorrow">
        delete from best_borrow
    </delete>

    <!--등급 퍼센테이지 확인-->
    <select id="customerSales" parameterType="hashmap" resultType="int">
        select borrow_membership_benefit from customer a
        join borrow_membership b on a.borrow_membership_seq = b.borrow_membership_seq
        where a.customer_seq = #{customer_seq}
    </select>

    <!-- 나의 등급 정보 확인 -->
    <select id="customerMembership" parameterType="hashmap" resultType="hashmap">
        SELECT *
        FROM borrow_membership, rental_membership
        WHERE borrow_membership_seq = (SELECT borrow_membership_seq
                                       FROM customer
                                       WHERE customer_seq = #{customer_seq})
        AND rental_membership_seq = (SELECT rental_membership_seq
                                     FROM customer
                                     WHERE customer_seq = #{customer_seq})
    </select>

    <select id="borrowCount" parameterType="hashmap" resultType="integer" >
        <![CDATA[
        SELECT count(c.matching_seq) count
        FROM db2020.customer a
        join matching c
        on a.customer_seq= c.customer_seq AND c.matching_endAt > NOW()
        where c.matching_type = "대여" AND a.customer_seq = #{customer_seq}
        ]]>
    </select>

    <select id="rentalCount" parameterType="hashmap" resultType="integer" >
        <![CDATA[
        SELECT count(c.matching_seq) count
        FROM db2020.customer a
        join matching c
        on a.customer_seq= c.customer_seq AND c.matching_endAt > NOW()
        where c.matching_type = "대출" AND a.customer_seq = #{customer_seq}
        ]]>
    </select>

    <select id="recommendCount" parameterType="hashmap" resultType="hashmap">
        SELECT count(recommend_seq) AS recommendCount, (SELECT customer_point FROM customer WHERE customer_seq = #{customer_seq}) AS customer_point
        FROM customer
        WHERE recommend_seq = #{customer_seq}
    </select>
    <insert id="insertBorrowArea" parameterType="hashmap">
        insert into best_borrow_area(best_borrow_area_seq, best_borrow_area_name, best_borrow_area_count)
        values(#{seq}, #{name}, #{count})
    </insert>
    <delete id="deleteBorrowArea">
        delete from best_borrow_area
    </delete>
</mapper>